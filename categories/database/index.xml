<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on /home/wpchou/blog</title>
    <link>https://wpchou.github.io/categories/database/</link>
    <description>Recent content in database on /home/wpchou/blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>wenpin</copyright>
    <lastBuildDate>Mon, 18 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wpchou.github.io/categories/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据库自动迁移</title>
      <link>https://wpchou.github.io/post/2020-05-18-atomic-ddl/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wpchou.github.io/post/2020-05-18-atomic-ddl/</guid>
      <description>在小型应用以及应用原型快速开发阶段，关系数据库表定义 自动迁移是非常方便的特性。现在成熟的 ORM 都有所支持。 以 typorm 为例，一般来说，我们进行一次成功的</description>
    </item>
    
    <item>
      <title>连续抽奖号码与 MySQL 自增主键</title>
      <link>https://wpchou.github.io/post/2019-11-15-consecutive-integer-and-mysql-autoincremental-key/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wpchou.github.io/post/2019-11-15-consecutive-integer-and-mysql-autoincremental-key/</guid>
      <description>最近运营要做一个简单的抽奖活动，要求从1开始产生连续的整数，作为抽奖号码发放出去，最后随机抽出一个号码作为幸运号码。一开始没多想，在 mongo 数据库</description>
    </item>
    
    <item>
      <title>如何使用 Sequelize (自动)管理数据库事务</title>
      <link>https://wpchou.github.io/post/2019-11-07-sequelize-transaction/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wpchou.github.io/post/2019-11-07-sequelize-transaction/</guid>
      <description>到目前为止，Sequelize 仍然是 nodejs 最成熟的 ORM 库。相关的文档有 manual 和 api rereference. 但老实说，写得不算好，manual 只能算 tutorial. api reference 也很多语焉不详，很多用</description>
    </item>
    
    <item>
      <title>并发请求与 MySQL 事务隔离</title>
      <link>https://wpchou.github.io/post/2019-10-31-mysql-isolation-level/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wpchou.github.io/post/2019-10-31-mysql-isolation-level/</guid>
      <description>旧文一则，记录处理数据异常的过程，借此阐述 MySQL 事务隔离的一些相关概念。 问题 在线做题是公司一个重要的业务。同一个用户可以对一张试卷(testpa</description>
    </item>
    
    <item>
      <title>《MySQL 实战 45 讲》拾遗</title>
      <link>https://wpchou.github.io/post/2019-07-28-mysql-practice/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wpchou.github.io/post/2019-07-28-mysql-practice/</guid>
      <description>极客时间上林晓斌的《MySQL 实战 45 讲》针对日常开发碰到的常见问题都有非常高的实践指导意义，虽然说在这一系列文章也简述了一些数据库原理，但要</description>
    </item>
    
    <item>
      <title>最左前缀原则</title>
      <link>https://wpchou.github.io/post/2019-06-13-left-prefix-index-rule/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wpchou.github.io/post/2019-06-13-left-prefix-index-rule/</guid>
      <description>数据库的索引有个最左前缀原则，英文称为 Left-Prefix Index Rule, 意即如果某个表有 &amp;lt;k1, k2,..., kn&amp;gt; 的复合键顺序索引，那么它逻辑上同时也有 &amp;lt;k1&amp;gt;, &amp;lt;k1, k2&amp;gt;, &amp;hellip;, &amp;lt;k1, k2, ..., km&amp;gt; (m &amp;lt; n) 等最左前缀的索</description>
    </item>
    
    <item>
      <title>MySQL 命令行客户端指令</title>
      <link>https://wpchou.github.io/post/2019-06-11-mysql-client-commands/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wpchou.github.io/post/2019-06-11-mysql-client-commands/</guid>
      <description>MySQL 的 GUI 客户端有非常多的选择，自带的，开源的，商业的……GUI 客户端比自带的命令行客户端 mysql 方便友好很多，但是在批量处理等长连接操作上经常会卡住</description>
    </item>
    
    <item>
      <title>Distinct and Group By</title>
      <link>https://wpchou.github.io/post/2019-06-10-distinct-and-group-by/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wpchou.github.io/post/2019-06-10-distinct-and-group-by/</guid>
      <description>在 MySQL 里面, DISTINCT 原则上可以用 GROUP BY 替换。 比如以下的 question 表是我们实际生产数据一个表的简化。 1 SHOW FULL COLUMNS FROM question; Field Type id int(10) unsigned type enum(&amp;lsquo;choice&amp;rsquo;,&amp;lsquo;single_choice&amp;rsquo;,&amp;lsquo;uncertain_choice&amp;rsquo;,&amp;lsquo;determine&amp;rsquo;,&amp;lsquo;fill&amp;rsquo;,&amp;lsquo;essay&amp;rsquo;,&amp;lsquo;material&amp;rsquo;) score float(10,1) unsigned 1 SHOW INDEX FROM question; Table Non_unique Key_name Seq_in_index Column_name Index_type question 0 PRIMARY</description>
    </item>
    
  </channel>
</rss>